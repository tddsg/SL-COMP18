(set-logic QF_S)
(set-info :source |
  Zhilin Wu.
  COMPSPEN benchmark.
|)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :status unsat)
(set-info :version "2018-06-21")
(declare-sort RefSll_t 0)
(declare-sort RefIll_t 0)
;; Declare cell type Sll_t
(declare-fun next () (Field RefSll_t RefSll_t) )
(declare-fun data () (Field RefSll_t RefIll_t) )

;; Declare cell type Ill_t

;; IGNORE declare-heap 
(define-fun sls ((?in RefSll_t) (?dt1 RefIll_t) (?out RefSll_t) (?dt2 RefIll_t) ) 
        Space 
    (tospace (or 
            (and 
                (= ?in ?out  )
                (= ?dt1 ?dt2  )
                (tobool emp ) 
            )
            (exists ((?u RefSll_t) (?dt3 RefIll_t) ) 
                (and 
                    (= ?dt1 ?dt3  )
                    (tobool (ssep 
                        (pto ?in
                            (sref (ref next ?u) (ref data ?dt1) ) 
                        ) 
                        (sls ?u ?dt3 ?out ?dt2) 
                    ) ) 
                )
            ) 
        ) 
    )
)
(check-sat)
(declare-fun X () RefSll_t)
(declare-fun Y () RefSll_t)
(declare-fun Z () RefSll_t)
(declare-fun a () RefIll_t)
(declare-fun b () RefIll_t)
(declare-fun c () RefIll_t)

(assert (tobool (ssep 
        (sls X a Y b) 
        (sls Y b Z c) 
    ) ) 
 )

(assert (not (tobool (sls X a Z c) ) )
 )
(check-sat)
