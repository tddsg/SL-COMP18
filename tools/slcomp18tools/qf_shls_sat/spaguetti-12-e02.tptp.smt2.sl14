(set-logic QF_S)
(set-info :source |
A. Rybalchenko and J. A. Navarro Perez.
[Separation Logic + Superposition Calculus = Heap Theorem Prover]
[PLDI 2011]
http://navarroj.com/research/papers.html#pldi11
|)
(set-info :smt-lib-version 2)
(set-info :category "random")
(set-info :status unsat)
(set-info :version "2014-05-28")
(declare-sort RefSll_t 0)
;; Declare cell type Sll_t
(declare-fun next () (Field RefSll_t RefSll_t) )

;; IGNORE declare-heap 
(define-fun ls ((?in RefSll_t) (?out RefSll_t) ) 
        Space 
    (tospace (or 
            (and 
                (= ?in ?out  )
                (tobool emp ) 
            )
            (exists ((?u RefSll_t) ) 
                (and 
                    (distinct ?in ?out  )
                    (tobool (ssep 
                        (pto ?in
                            (ref next ?u) 
                        ) 
                        (ls ?u ?out) 
                    ) ) 
                )
            ) 
        ) 
    )
)
(check-sat)
(declare-fun x0 () RefSll_t)
(declare-fun x1 () RefSll_t)
(declare-fun x2 () RefSll_t)
(declare-fun x3 () RefSll_t)
(declare-fun x4 () RefSll_t)
(declare-fun x5 () RefSll_t)
(declare-fun x6 () RefSll_t)
(declare-fun x7 () RefSll_t)
(declare-fun x8 () RefSll_t)
(declare-fun x9 () RefSll_t)
(declare-fun x10 () RefSll_t)
(declare-fun x11 () RefSll_t)
(declare-fun x12 () RefSll_t)
(declare-fun x13 () RefSll_t)
(declare-fun x14 () RefSll_t)
(declare-fun x15 () RefSll_t)
(declare-fun x16 () RefSll_t)

(assert (and 
        (= nil  nil   )
        (distinct x3 x11  )
        (distinct x3 x12  )
        (distinct x7 x12  )
        (distinct x2 x11  )
        (distinct x2 x10  )
        (tobool (ssep 
            (ls x5 x2) 
            (ls x5 x7) 
            (ls x5 x4) 
            (ls x12 x1) 
            (ls x12 x6) 
            (ls x2 x12) 
            (ls x9 x10) 
            (ls x3 x11) 
            (ls x3 x1) 
            (ls x3 x6) 
            (ls x4 x9) 
            (ls x4 x8) 
            (ls x11 x8) 
            (ls x11 x6) 
            (ls x1 x9) 
            (ls x1 x8) 
            (ls x6 x2) 
        ) ) 
    )
 )
(check-sat)
