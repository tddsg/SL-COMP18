(set-logic QF_S)
(set-info :source | 
  R. Iosif, A. Rogalewicz and T. Vojnar. 
  Deciding Entailments in Inductive Separation Logic with Tree Automata arXiv:1402.2127. 
  http://www.fit.vutbr.cz/research/groups/verifit/tools/slide/ 
|)
(set-info :smt-lib-version 2)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort RefDLL_t 0)
;; Declare cell type DLL_t
(declare-fun prev () (Field RefDLL_t RefDLL_t) )
(declare-fun next () (Field RefDLL_t RefDLL_t) )

;; IGNORE declare-heap 
(define-fun DLL ((?hd RefDLL_t) (?p RefDLL_t) (?tl RefDLL_t) (?n RefDLL_t) ) 
 Space 
    (tospace (or 
            (and 
                (= ?p ?tl  )
                (= ?hd ?n  )
                (tobool emp ) 
            )
            (exists ((?x RefDLL_t) ) 
                (tobool (ssep 
                    (pto ?hd
                        (sref (ref prev ?p) (ref next ?x) ) 
                    ) 
                    (DLL ?x ?hd ?tl ?n) 
                ) ) 
            ) 
        ) 
    )
)
(define-fun DLL_plus ((?hd RefDLL_t) (?p RefDLL_t) (?tl RefDLL_t) (?n RefDLL_t) ) 
 Space 
    (tospace (or 
            (and 
                (= ?hd ?tl  )
                (tobool (pto ?hd
                    (sref (ref prev ?p) (ref next ?n) ) 
                ) ) 
            )
            (exists ((?x RefDLL_t) ) 
                (tobool (ssep 
                    (pto ?hd
                        (sref (ref prev ?p) (ref next ?x) ) 
                    ) 
                    (DLL_plus ?x ?hd ?tl ?n) 
                ) ) 
            ) 
        ) 
    )
)
(define-fun DLL_plus_rev ((?hd RefDLL_t) (?p RefDLL_t) (?tl RefDLL_t) (?n RefDLL_t) ) 
 Space 
    (tospace (or 
            (and 
                (= ?hd ?tl  )
                (tobool (pto ?hd
                    (sref (ref prev ?p) (ref next ?n) ) 
                ) ) 
            )
            (exists ((?x RefDLL_t) ) 
                (tobool (ssep 
                    (pto ?tl
                        (sref (ref prev ?x) (ref next ?n) ) 
                    ) 
                    (DLL_plus_rev ?hd ?p ?x ?tl) 
                ) ) 
            ) 
        ) 
    )
)
(check-sat)
(declare-fun hd0 () RefDLL_t)
(declare-fun tl0 () RefDLL_t)
(declare-fun hd1 () RefDLL_t)
(declare-fun tl1 () RefDLL_t)
(declare-fun hd2 () RefDLL_t)
(declare-fun tl2 () RefDLL_t)
(declare-fun hd3 () RefDLL_t)
(declare-fun tl3 () RefDLL_t)
(declare-fun hd4 () RefDLL_t)
(declare-fun tl4 () RefDLL_t)
(declare-fun hd5 () RefDLL_t)
(declare-fun tl5 () RefDLL_t)
(declare-fun hd6 () RefDLL_t)
(declare-fun tl6 () RefDLL_t)
(declare-fun hd7 () RefDLL_t)
(declare-fun tl7 () RefDLL_t)
(declare-fun hd8 () RefDLL_t)
(declare-fun tl8 () RefDLL_t)
(declare-fun hd9 () RefDLL_t)
(declare-fun tl9 () RefDLL_t)
(declare-fun hd10 () RefDLL_t)
(declare-fun tl10 () RefDLL_t)
(declare-fun hd11 () RefDLL_t)
(declare-fun tl11 () RefDLL_t)
(declare-fun hd12 () RefDLL_t)
(declare-fun tl12 () RefDLL_t)
(declare-fun hd13 () RefDLL_t)
(declare-fun tl13 () RefDLL_t)
(declare-fun hd14 () RefDLL_t)
(declare-fun tl14 () RefDLL_t)
(declare-fun hd15 () RefDLL_t)
(declare-fun tl15 () RefDLL_t)
(declare-fun hd16 () RefDLL_t)
(declare-fun tl16 () RefDLL_t)
(declare-fun hd17 () RefDLL_t)
(declare-fun tl17 () RefDLL_t)
(declare-fun hd18 () RefDLL_t)
(declare-fun tl18 () RefDLL_t)
(declare-fun hd19 () RefDLL_t)
(declare-fun tl19 () RefDLL_t)
(declare-fun hd20 () RefDLL_t)
(declare-fun tl20 () RefDLL_t)

(assert (tobool (ssep 
        (DLL_plus hd0 nil  tl0 hd1) 
        (DLL_plus hd1 tl0 tl1 hd2) 
        (DLL_plus hd2 tl1 tl2 hd3) 
        (DLL_plus hd3 tl2 tl3 hd4) 
        (DLL_plus hd4 tl3 tl4 hd5) 
        (DLL_plus hd5 tl4 tl5 hd6) 
        (DLL_plus hd6 tl5 tl6 hd7) 
        (DLL_plus hd7 tl6 tl7 hd8) 
        (DLL_plus hd8 tl7 tl8 hd9) 
        (DLL_plus hd9 tl8 tl9 hd10) 
        (DLL_plus hd10 tl9 tl10 hd11) 
        (DLL_plus hd11 tl10 tl11 hd12) 
        (DLL_plus hd12 tl11 tl12 hd13) 
        (DLL_plus hd13 tl12 tl13 hd14) 
        (DLL_plus hd14 tl13 tl14 hd15) 
        (DLL_plus hd15 tl14 tl15 hd16) 
        (DLL_plus hd16 tl15 tl16 hd17) 
        (DLL_plus hd17 tl16 tl17 hd18) 
        (DLL_plus hd18 tl17 tl18 hd19) 
        (DLL_plus hd19 tl18 tl19 hd20) 
        (DLL_plus hd20 tl19 tl20 nil ) 
    ) ) 
 )

(assert (not (tobool (ssep 
        (DLL_plus_rev hd0 nil  tl0 hd1) 
        (DLL_plus_rev hd1 tl0 tl1 hd2) 
        (DLL_plus_rev hd2 tl1 tl2 hd3) 
        (DLL_plus_rev hd3 tl2 tl3 hd4) 
        (DLL_plus_rev hd4 tl3 tl4 hd5) 
        (DLL_plus_rev hd5 tl4 tl5 hd6) 
        (DLL_plus_rev hd6 tl5 tl6 hd7) 
        (DLL_plus_rev hd7 tl6 tl7 hd8) 
        (DLL_plus_rev hd8 tl7 tl8 hd9) 
        (DLL_plus_rev hd9 tl8 tl9 hd10) 
        (DLL_plus_rev hd10 tl9 tl10 hd11) 
        (DLL_plus hd11 tl10 tl11 hd12) 
        (DLL_plus hd12 tl11 tl12 hd13) 
        (DLL_plus hd13 tl12 tl13 hd14) 
        (DLL_plus hd14 tl13 tl14 hd15) 
        (DLL_plus hd15 tl14 tl15 hd16) 
        (DLL_plus hd16 tl15 tl16 hd17) 
        (DLL_plus hd17 tl16 tl17 hd18) 
        (DLL_plus hd18 tl17 tl18 hd19) 
        (DLL_plus hd19 tl18 tl19 hd20) 
        (DLL_plus hd20 tl19 tl20 nil ) 
    ) )  )
 )
(check-sat)
