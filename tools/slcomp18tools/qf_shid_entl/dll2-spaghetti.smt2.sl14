(set-logic QF_S)
(set-info :source | 
  R. Iosif, A. Rogalewicz and T. Vojnar. 
  Deciding Entailments in Inductive Separation Logic with Tree Automata arXiv:1402.2127. 
  http://www.fit.vutbr.cz/research/groups/verifit/tools/slide/ 
|)
(set-info :smt-lib-version 2)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort RefDLL2_t 0)
;; Declare cell type DLL2_t
(declare-fun prev () (Field RefDLL2_t RefDLL2_t) )
(declare-fun next () (Field RefDLL2_t RefDLL2_t) )
(declare-fun prev2 () (Field RefDLL2_t RefDLL2_t) )
(declare-fun next2 () (Field RefDLL2_t RefDLL2_t) )
(declare-fun down () (Field RefDLL2_t RefDLL2_t) )

;; IGNORE declare-heap 
(define-fun DLL1_plus ((?hd RefDLL2_t) (?p RefDLL2_t) ) 
 Space 
    (tospace (or 
            (tobool (pto ?hd
                (sref (ref prev ?p) (ref next nil ) (ref prev2 nil ) (ref next2 nil ) (ref down nil ) ) 
            ) ) 
            (exists ((?x RefDLL2_t) ) 
                (tobool (ssep 
                    (pto ?hd
                        (sref (ref prev ?p) (ref next ?x) (ref prev2 nil ) (ref next2 nil ) (ref down nil ) ) 
                    ) 
                    (DLL1_plus ?x ?hd) 
                ) ) 
            ) 
        ) 
    )
)
(define-fun DLL2_plus ((?hd RefDLL2_t) (?p RefDLL2_t) (?tl RefDLL2_t) (?n RefDLL2_t) ) 
 Space 
    (tospace (or 
            (exists ((?down_hd RefDLL2_t) ) 
                (and 
                    (= ?hd ?tl  )
                    (tobool (ssep 
                        (pto ?hd
                            (sref (ref prev nil ) (ref next nil ) (ref prev2 ?p) (ref next2 ?n) (ref down ?down_hd) ) 
                        ) 
                        (DLL1_plus ?down_hd ?hd) 
                    ) ) 
                )
            ) 
            (exists ((?x RefDLL2_t) (?down_hd RefDLL2_t) ) 
                (tobool (ssep 
                    (pto ?hd
                        (sref (ref prev nil ) (ref next nil ) (ref prev2 ?p) (ref next2 ?x) (ref down ?down_hd) ) 
                    ) 
                    (DLL1_plus ?down_hd ?hd) 
                    (DLL2_plus ?x ?hd ?tl ?n) 
                ) ) 
            ) 
        ) 
    )
)
(define-fun DLL2_plus_rev ((?hd RefDLL2_t) (?p RefDLL2_t) (?tl RefDLL2_t) (?n RefDLL2_t) ) 
 Space 
    (tospace (or 
            (exists ((?down_hd RefDLL2_t) ) 
                (and 
                    (= ?hd ?tl  )
                    (tobool (ssep 
                        (pto ?hd
                            (sref (ref prev nil ) (ref next nil ) (ref prev2 ?p) (ref next2 ?n) (ref down ?down_hd) ) 
                        ) 
                        (DLL1_plus ?down_hd ?hd) 
                    ) ) 
                )
            ) 
            (exists ((?x RefDLL2_t) (?down_hd RefDLL2_t) ) 
                (tobool (ssep 
                    (pto ?tl
                        (sref (ref prev nil ) (ref next nil ) (ref prev2 ?x) (ref next2 ?n) (ref down ?down_hd) ) 
                    ) 
                    (DLL1_plus ?down_hd ?tl) 
                    (DLL2_plus_rev ?hd ?p ?x ?tl) 
                ) ) 
            ) 
        ) 
    )
)
(check-sat)
(declare-fun hd0 () RefDLL2_t)
(declare-fun tl0 () RefDLL2_t)
(declare-fun hd1 () RefDLL2_t)
(declare-fun tl1 () RefDLL2_t)
(declare-fun hd2 () RefDLL2_t)
(declare-fun tl2 () RefDLL2_t)
(declare-fun hd3 () RefDLL2_t)
(declare-fun tl3 () RefDLL2_t)
(declare-fun hd4 () RefDLL2_t)
(declare-fun tl4 () RefDLL2_t)
(declare-fun hd5 () RefDLL2_t)
(declare-fun tl5 () RefDLL2_t)
(declare-fun hd6 () RefDLL2_t)
(declare-fun tl6 () RefDLL2_t)
(declare-fun hd7 () RefDLL2_t)
(declare-fun tl7 () RefDLL2_t)
(declare-fun hd8 () RefDLL2_t)
(declare-fun tl8 () RefDLL2_t)
(declare-fun hd9 () RefDLL2_t)
(declare-fun tl9 () RefDLL2_t)
(declare-fun hd10 () RefDLL2_t)
(declare-fun tl10 () RefDLL2_t)
(declare-fun hd11 () RefDLL2_t)
(declare-fun tl11 () RefDLL2_t)
(declare-fun hd12 () RefDLL2_t)
(declare-fun tl12 () RefDLL2_t)
(declare-fun hd13 () RefDLL2_t)
(declare-fun tl13 () RefDLL2_t)
(declare-fun hd14 () RefDLL2_t)
(declare-fun tl14 () RefDLL2_t)
(declare-fun hd15 () RefDLL2_t)
(declare-fun tl15 () RefDLL2_t)
(declare-fun hd16 () RefDLL2_t)
(declare-fun tl16 () RefDLL2_t)
(declare-fun hd17 () RefDLL2_t)
(declare-fun tl17 () RefDLL2_t)
(declare-fun hd18 () RefDLL2_t)
(declare-fun tl18 () RefDLL2_t)
(declare-fun hd19 () RefDLL2_t)
(declare-fun tl19 () RefDLL2_t)
(declare-fun hd20 () RefDLL2_t)
(declare-fun tl20 () RefDLL2_t)

(assert (tobool (ssep 
        (DLL2_plus hd0 nil  tl0 hd1) 
        (DLL2_plus hd1 tl0 tl1 hd2) 
        (DLL2_plus hd2 tl1 tl2 hd3) 
        (DLL2_plus hd3 tl2 tl3 hd4) 
        (DLL2_plus hd4 tl3 tl4 hd5) 
        (DLL2_plus hd5 tl4 tl5 hd6) 
        (DLL2_plus hd6 tl5 tl6 hd7) 
        (DLL2_plus hd7 tl6 tl7 hd8) 
        (DLL2_plus hd8 tl7 tl8 hd9) 
        (DLL2_plus hd9 tl8 tl9 hd10) 
        (DLL2_plus hd10 tl9 tl10 hd11) 
        (DLL2_plus hd11 tl10 tl11 hd12) 
        (DLL2_plus hd12 tl11 tl12 hd13) 
        (DLL2_plus hd13 tl12 tl13 hd14) 
        (DLL2_plus hd14 tl13 tl14 hd15) 
        (DLL2_plus hd15 tl14 tl15 hd16) 
        (DLL2_plus hd16 tl15 tl16 hd17) 
        (DLL2_plus hd17 tl16 tl17 hd18) 
        (DLL2_plus hd18 tl17 tl18 hd19) 
        (DLL2_plus hd19 tl18 tl19 hd20) 
        (DLL2_plus hd20 tl19 tl20 nil ) 
    ) ) 
 )

(assert (not (tobool (ssep 
        (DLL2_plus_rev hd0 nil  tl0 hd1) 
        (DLL2_plus_rev hd1 tl0 tl1 hd2) 
        (DLL2_plus_rev hd2 tl1 tl2 hd3) 
        (DLL2_plus_rev hd3 tl2 tl3 hd4) 
        (DLL2_plus_rev hd4 tl3 tl4 hd5) 
        (DLL2_plus_rev hd5 tl4 tl5 hd6) 
        (DLL2_plus_rev hd6 tl5 tl6 hd7) 
        (DLL2_plus_rev hd7 tl6 tl7 hd8) 
        (DLL2_plus_rev hd8 tl7 tl8 hd9) 
        (DLL2_plus_rev hd9 tl8 tl9 hd10) 
        (DLL2_plus_rev hd10 tl9 tl10 hd11) 
        (DLL2_plus_rev hd11 tl10 tl11 hd12) 
        (DLL2_plus_rev hd12 tl11 tl12 hd13) 
        (DLL2_plus_rev hd13 tl12 tl13 hd14) 
        (DLL2_plus_rev hd14 tl13 tl14 hd15) 
        (DLL2_plus_rev hd15 tl14 tl15 hd16) 
        (DLL2_plus_rev hd16 tl15 tl16 hd17) 
        (DLL2_plus_rev hd17 tl16 tl17 hd18) 
        (DLL2_plus_rev hd18 tl17 tl18 hd19) 
        (DLL2_plus_rev hd19 tl18 tl19 hd20) 
        (DLL2_plus_rev hd20 tl19 tl20 nil ) 
    ) )  )
 )
(check-sat)
