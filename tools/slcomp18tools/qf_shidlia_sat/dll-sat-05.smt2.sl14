(set-logic QF_S)
(set-info :source |
  Zhilin Wu.
  COMPSPEN benchmark.
|)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :status unsat)
(set-info :version "2018-06-21")
(declare-sort RefDll_t 0)
;; Declare cell type Dll_t
(declare-fun next () (Field RefDll_t RefDll_t) )
(declare-fun prev () (Field RefDll_t RefDll_t) )
(declare-fun data () (Field RefDll_t Int) )

;; IGNORE declare-heap 
(define-fun sdll ((?E RefDll_t) (?P RefDll_t) (?dt1 Int) (?F RefDll_t) (?L RefDll_t) (?dt2 Int) ) 
        Space 
    (tospace (or 
            (and 
                (= ?E ?F  )
                (= ?P ?L  )
                (= ?dt1 ?dt2  )
                (tobool emp ) 
            )
            (exists ((?u RefDll_t) (?dt3 Int) ) 
                (and 
                    (> ?dt1 (+ ?dt3 1) ) 
                    (tobool (ssep 
                        (pto ?E
                            (sref (ref next ?u) (ref prev ?P) (ref data ?dt1) ) 
                        ) 
                        (sdll ?u ?E ?dt3 ?F ?L ?dt2) 
                    ) ) 
                )
            ) 
        ) 
    )
)
(check-sat)
(declare-fun x1 () RefDll_t)
(declare-fun x2 () RefDll_t)
(declare-fun y0 () RefDll_t)
(declare-fun y1 () RefDll_t)
(declare-fun y2 () RefDll_t)
(declare-fun z () RefDll_t)
(declare-fun d1 () Int)
(declare-fun d2 () Int)

(assert (and 
        (> d1 (+ d2 3) ) 
        (tobool (ssep 
            (pto y2
                (sref (ref next x1) (ref prev y0) (ref data d2) ) 
            ) 
            (sdll x1 x2 d1 y1 y2 d2) 
        ) ) 
    )
 )
(check-sat)
