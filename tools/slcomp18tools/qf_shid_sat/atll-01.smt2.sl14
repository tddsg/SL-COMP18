(set-logic QF_S)
(set-info :source |
Jens Katelaan, Harrsh, https://github.com/katelaan/harrsh/
|)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :status sat)
(set-info :version "2018-06-21")
(declare-sort RefAtll_t 0)
;; Declare cell type Atll_t
(declare-fun lson () (Field RefAtll_t RefAtll_t) )
(declare-fun rson () (Field RefAtll_t RefAtll_t) )
(declare-fun next () (Field RefAtll_t RefAtll_t) )

;; IGNORE declare-heap 
(define-fun atll ((?r RefAtll_t) (?ll RefAtll_t) (?rl RefAtll_t) ) 
        Space 
    (tospace (or 
            (and 
                (distinct ?r ?rl  )
                (= ?r ?ll  )
                (tobool (pto ?r
                    (sref (ref lson nil ) (ref rson nil ) (ref next ?rl) ) 
                ) ) 
            )
            (exists ((?ls RefAtll_t) (?rs RefAtll_t) (?z RefAtll_t) ) 
                (and 
                    (distinct ?r ?ll  )
                    (distinct ?r ?rl  )
                    (tobool (ssep 
                        (pto ?r
                            (sref (ref lson ?ls) (ref rson ?rs) (ref next nil ) ) 
                        ) 
                        (atll ?ls ?ll ?z) 
                        (atll ?rs ?z ?rl) 
                    ) ) 
                )
            ) 
        ) 
    )
)
(define-fun R ((?x1 RefAtll_t) (?x2 RefAtll_t) (?y RefAtll_t) ) 
        Space 
    (tospace (tobool (ssep 
            (atll ?x1 ?x2 ?y) 
            (pto ?y
                (sref (ref lson nil ) (ref rson nil ) (ref next nil ) ) 
            ) 
        ) ) 
    )
)
(check-sat)
(declare-fun x0 () RefAtll_t)
(declare-fun x1 () RefAtll_t)
(declare-fun y0 () RefAtll_t)

(assert (tobool (R x0 x1 y0) )
 )
(check-sat)
