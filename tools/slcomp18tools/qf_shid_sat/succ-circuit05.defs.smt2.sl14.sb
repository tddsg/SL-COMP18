
data RefGTyp {
    RefGTyp f0;
    RefGTyp f1;
};

pred one(x) := (emp & nil!=x);

pred zero(x) := (emp & nil=x);

pred succ5circuit(x1,x2,x3,x4,x5,y1,y2,y3,y4,y5) := (exists z3,z4,z5. notg(x1,y1) * xorg(x1,x2,y2) * andg(x1,x2,z3) * xorg(z3,x3,y3) * andg(z3,x3,z4) * xorg(x4,y4,z4) * andg(z4,x4,z5) * xorg(x5,y5,z5));

pred Q(y1,y2,y3,y4,y5) := 
    (zero(y1) * zero(y2) * zero(y3) * zero(y4) * zero(y5))
    \/ (exists x1,x2,x3,x4,x5. succ5circuit(x1,x2,x3,x4,x5,y1,y2,y3,y4,y5) * Q(x1,x2,x3,x4,x5));

pred P(x1,x2,x3,x4,x5) := (one(x1) * one(x2) * one(x3) * one(x4) * one(x5) * Q(x1,x2,x3,x4,x5));

pred notg(x,y) := 
    (zero(x) * one(y))
    \/ (one(x) * zero(y));

pred xorg(x,y,z) := 
    (zero(x) * zero(y) * zero(z))
    \/ (zero(x) * one(y) * one(z))
    \/ (one(x) * zero(y) * one(z))
    \/ (one(x) * one(y) * zero(z));

pred andg(x,y,z) := 
    (zero(x) * zero(z))
    \/ (zero(y) * zero(z))
    \/ (one(x) * one(y) * one(z));


checkentail P(x0,x1,x2,x3,x4)
    |- false;
