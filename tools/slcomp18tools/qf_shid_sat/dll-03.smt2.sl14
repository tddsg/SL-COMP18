(set-logic QF_S)
(set-info :source |
Jens Katelaan, Harrsh, https://github.com/katelaan/harrsh/
|)
(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :status sat)
(set-info :version "2018-06-21")
(declare-sort RefDll_t 0)
;; Declare cell type Dll_t
(declare-fun next () (Field RefDll_t RefDll_t) )
(declare-fun prev () (Field RefDll_t RefDll_t) )

;; IGNORE declare-heap 
(define-fun dll ((?fr RefDll_t) (?pr RefDll_t) (?nx RefDll_t) (?bk RefDll_t) ) 
        Space 
    (tospace (or 
            (and 
                (= ?fr ?nx  )
                (= ?bk ?pr  )
                (tobool emp ) 
            )
            (exists ((?u RefDll_t) ) 
                (and 
                    (distinct ?fr ?nx  )
                    (distinct ?bk ?pr  )
                    (tobool (ssep 
                        (pto ?fr
                            (sref (ref next ?u) (ref prev ?pr) ) 
                        ) 
                        (dll ?u ?fr ?nx ?bk) 
                    ) ) 
                )
            ) 
        ) 
    )
)
(check-sat)
(declare-fun x0 () RefDll_t)
(declare-fun y0 () RefDll_t)
(declare-fun y1 () RefDll_t)
(declare-fun z0 () RefDll_t)
(declare-fun z1 () RefDll_t)
(declare-fun w0 () RefDll_t)
(declare-fun w1 () RefDll_t)
(declare-fun v1 () RefDll_t)

(assert (and 
        (distinct x0 y0  )
        (distinct y0 z0  )
        (distinct z0 w0  )
        (tobool (ssep 
            (dll x0 nil  y0 y1) 
            (dll y0 nil  z0 z1) 
            (dll z0 nil  w0 w1) 
            (dll w0 nil  nil  v1) 
        ) ) 
    )
 )
(check-sat)
