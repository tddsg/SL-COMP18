
data RefGTyp {
    RefGTyp f0;
    RefGTyp f1;
};

pred one(x) := (emp & nil!=x);

pred zero(x) := (emp & nil=x);

pred succ1circuit(x1,y1) := (notg(x1,y1));

pred Q(y1) := 
    (zero(y1))
    \/ (exists x1. succ1circuit(x1,y1) * Q(x1));

pred P(x1) := (one(x1) * Q(x1));

pred notg(x,y) := 
    (zero(x) * one(y))
    \/ (one(x) * zero(y));

pred xorg(x,y,z) := 
    (zero(x) * zero(y) * zero(z))
    \/ (zero(x) * one(y) * one(z))
    \/ (one(x) * zero(y) * one(z))
    \/ (one(x) * one(y) * zero(z));

pred andg(x,y,z) := 
    (zero(x) * zero(z))
    \/ (zero(y) * zero(z))
    \/ (one(x) * one(y) * one(z));


checkentail P(x0)
    |- false;
